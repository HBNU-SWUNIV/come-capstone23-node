# -*- coding: utf-8 -*-
"""형태소를 이용한 문자열 매칭.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1df9DQKPSeCYazpQYZI-R_9qqZajA-Z0R
"""

#konlpy 라이브러리 설치
pip install konlpy

import time
from konlpy.tag import Kkma

# 입력 파일 이름을 사용자에게 묻고, 파일을 열어 각 라인을 리스트로 저장
filename = input("Enter input string stream file name: ")

with open(filename, 'r', encoding='utf-8') as f:
    lines = f.readlines()

# 필터링할 단어 리스트 파일 이름을 사용자에게 묻고, 파일을 열어 각 라인을 리스트로 저장
filterlist_filename = input("Enter filter string list file name: ")
with open(filterlist_filename, 'r', encoding='utf-8') as f:
    filterlist_lines = f.readlines()

# Kkma 형태소 분석기 객체 생성 및 입력 문장에서 추출한 형태소를 리스트에 저장
kkma = Kkma()
input_words = []
for line in lines:
    morphs = kkma.pos(line)
    print(f"{filename}: {morphs}")
    for morph, pos in morphs:
        input_words.append(morph)

# 필터링할 단어 리스트를 파싱하여 filterlist 리스트에 저장
filterlist = []
for line in filterlist_lines:
    words, tags = line.strip().split(' | ')
    words = words.split(', ')
    tags = tags.split(', ')
    filterlist.append([(word, tag) for word, tag in zip(words, tags)])

print("filterlist : ", filterlist)   # 필터링할 단어 리스트를 출력

start_time = time.time()  #시간 측정 시작

# 출력 파일을 생성하고, 입력 파일의 각 라인을 읽어와 필터링할 단어가 있는지 찾아내고, 출력 파일에 저장
with open("output.txt", "w", encoding='utf-8') as output_file:
    for i, input_line in enumerate(lines):
        input_morphs = kkma.pos(input_line)
        input_words = [morph for morph, _ in input_morphs]
        common_words = []
        for input_word in input_words:
            for filterlist_words in filterlist:
                for filterlist_word, filterlist_pos in filterlist_words:
                     if filterlist_word in input_word and input_word not in common_words:
                        common_words.append(input_word)
        end_time = time.time()  #시간 측정 종료              
        if common_words:
            common_words_str = ', '.join(common_words)
            output_file.write(f"Line {i+1} {input_line.strip()} : {common_words_str}\n")

# 출력 파일을 읽어와 각 라인을 출력
with open("output.txt", "r", encoding='utf-8') as output_file:
    output_lines = output_file.readlines()

for line in output_lines:
    words = line.strip().split(' | ')[:]
    print(f"output.txt: {words}")

# 문자열 매칭 시간을 계산하여 출력
elapsed_time = end_time - start_time
print("문자열 매칭 시간: %.3f seconds" % elapsed_time)

#filter_string_list에 저장된 filter string의 품사 확인

from konlpy.tag import Kkma

filename = input("Enter file name: ")

with open(filename, 'r', encoding='utf-8') as f:
    lines = f.readlines()

kkam = Kkma()
for line in lines:
    morphs = kkam.pos(line)
    print(morphs)